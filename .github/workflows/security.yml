name: Security and Dependency Scanning

on:
  push:
    branches: [ main, develop, release/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Audit for security vulnerabilities
      run: |
        echo "Checking for known security vulnerabilities in dependencies..."
        dotnet list package --vulnerable --include-transitive --framework net8.0 > vulnerability-report.txt 2>&1 || true
        
        # Check if vulnerabilities were found
        if grep -q "has the following vulnerable packages" vulnerability-report.txt; then
          echo "⚠️ Security vulnerabilities found in dependencies:"
          cat vulnerability-report.txt
          echo "::warning::Security vulnerabilities detected in dependencies. Please review and update."
        else
          echo "✅ No known security vulnerabilities found in dependencies."
        fi
        
    - name: Check for deprecated packages
      run: |
        echo "Checking for deprecated packages..."
        dotnet list package --deprecated --include-transitive > deprecated-report.txt 2>&1 || true
        
        if grep -q "deprecated" deprecated-report.txt; then
          echo "⚠️ Deprecated packages found:"
          cat deprecated-report.txt
          echo "::warning::Deprecated packages detected. Consider updating to supported alternatives."
        else
          echo "✅ No deprecated packages found."
        fi
        
    - name: Check for outdated packages
      run: |
        echo "Checking for outdated packages..."
        dotnet list package --outdated --include-transitive > outdated-report.txt 2>&1 || true
        
        if grep -q ">" outdated-report.txt; then
          echo "ℹ️ Outdated packages found:"
          cat outdated-report.txt
          echo "::notice::Outdated packages detected. Consider updating for latest features and fixes."
        else
          echo "✅ All packages are up to date."
        fi
        
    - name: Upload dependency reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-reports
        path: |
          vulnerability-report.txt
          deprecated-report.txt
          outdated-report.txt
        retention-days: 30

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy'
        
    - name: Upload Trivy scan results as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-scan-results
        path: trivy-results.sarif
        retention-days: 30

  secrets-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch full history for secret scanning
        fetch-depth: 0
        
    - name: TruffleHog OSS Secret Scanner
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified