{
    "name": "AI Agent Instructions DevContainer",
    "image": "ghcr.io/nam20485/agent-instructions-devcontainer:latest",
    // // "DOTNET_VERSION": "9.0.102",
    // // "NODE_VERSION": "22",
    // // "POWERSHELL_VERSION": "7.4"		
    "features": {
        "ghcr.io/devcontainers/features/docker-in-docker:2": {
            "version": "latest",
            "enableNonRootDocker": "true"
        },
        "ghcr.io/devcontainers/features/sshd:1": {
            "version": "latest"
        }
    },
    "customizations": {
        "vscode": {
            "extensions": [
                // .NET Development
                "ms-dotnettools.csharp",
                "ms-dotnettools.csharp-devkit",
                "ms-dotnettools.csharp-extensions",
                "ms-dotnettools.vscodeintellicode-csharp",
                "ms-dotnettools.dotnet-maui",
                "aliasadidev.nugetpackagemanagergui",
                // AI & Productivity
                "github.copilot",
                "github.copilot-chat",
                // API & Configuration
                "42crunch.vscode-openapi",
                "ahmadalli.vscode-nginx-conf",
                // Web Development
                "christian-kohler.npm-intellisense",
                "dbaeumer.vscode-eslint",
                // DevOps & CI/CD
                "github.vscode-github-actions",
                "ms-vscode.vscode-docker",
                "hashicorp.terraform",
                // Cloud Development
                "googlecloudtools.cloudcode",
                "google.geminicodeassist",
                "ms-vscode.vscode-firebase",
                // Testing & Quality
                "hbenl.vscode-test-explorer",
                "coverlet.vscode-coverlet",
                // System Tools
                "ms-vscode.powershell",
                "usernamehw.errorlens"
            ],
            "settings": {
                "dotnet.defaultSolution": "disable",
                "omnisharp.enableEditorConfigSupport": true,
                "omnisharp.enableRoslynAnalyzers": true,
                "files.exclude": {
                    "**/bin": true,
                    "**/obj": true
                },
                "terminal.integrated.defaultProfile.linux": "pwsh",
                "terminal.integrated.profiles.linux": {
                    "pwsh": {
                        "path": "/usr/bin/pwsh"
                    }
                }
            }
        }
    },
    "forwardPorts": [
        5000,
        5001,
        8080,
        3000,
        4200
    ],
    "portsAttributes": {
        "5000": {
            "label": "ASP.NET Core HTTP",
            "protocol": "http"
        },
        "5001": {
            "label": "ASP.NET Core HTTPS",
            "protocol": "https"
        },
        "8080": {
            "label": "Web Server",
            "protocol": "http"
        },
        "3000": {
            "label": "React/Node.js",
            "protocol": "http"
        },
        "4200": {
            "label": "Angular",
            "protocol": "http"
        }
    },
    //"postCreateCommand": "bash .devcontainer/post-create.sh",
    "remoteUser": "vscode",
    "containerEnv": {
        "DOTNET_CLI_TELEMETRY_OPTOUT": "1",
        "DOTNET_SKIP_FIRST_TIME_EXPERIENCE": "1",
        "DOTNET_NOLOGO": "1",
        "ASPNETCORE_ENVIRONMENT": "Development"
    },
    "mounts": [
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    ]
}